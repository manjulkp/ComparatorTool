<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="1" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-12-16T22:01:53 GMT" name="Default suite" finished-at="2019-12-16T22:01:56 GMT" duration-ms="3278">
    <groups>
      <group name="cucumber">
        <method signature="TestRunner.scenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@524d6d96]" name="scenario" class="runner.TestRunner"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2019-12-16T22:01:53 GMT" name="Default test" finished-at="2019-12-16T22:01:56 GMT" duration-ms="3278">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUp()[pri:0, instance:runner.TestRunner@524d6d96]" started-at="2019-12-16T22:01:53 GMT" name="setUp" finished-at="2019-12-16T22:01:53 GMT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.TestRunner@524d6d96]" started-at="2019-12-16T22:01:53 GMT" name="setUpClass" finished-at="2019-12-16T22:01:53 GMT" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="scenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@524d6d96]" started-at="2019-12-16T22:01:53 GMT" name="scenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-12-16T22:01:56 GMT" duration-ms="2996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Compare reponse of two files"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Compare Reponse Between Two Files"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@524d6d96]" started-at="2019-12-16T22:01:56 GMT" name="tearDownClass" finished-at="2019-12-16T22:01:56 GMT" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:runner.TestRunner@524d6d96]" started-at="2019-12-16T22:01:56 GMT" name="generateReport" finished-at="2019-12-16T22:01:58 GMT" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:runner.TestRunner@524d6d96]" started-at="2019-12-16T22:01:58 GMT" name="tearDown" finished-at="2019-12-16T22:01:58 GMT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
